
// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@use '@angular/material' as mat;
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat.core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$yanki-shop-primary: mat.define-palette(mat.$indigo-palette);
$yanki-shop-accent: mat.define-palette(mat.$pink-palette, A200, A100, A400);

// The warn palette is optional (defaults to red).
$yanki-shop-warn: mat.define-palette(mat.$red-palette);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$yanki-shop-theme: mat.define-light-theme((
  color: (
    primary: $yanki-shop-primary,
    accent: $yanki-shop-accent,
    warn: $yanki-shop-warn,
  )
));

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include mat.all-component-themes($yanki-shop-theme);


// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@import '~@angular/material/theming';
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat-core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$women-store-primary: mat-palette($mat-indigo);
$women-store-accent: mat-palette($mat-pink, A200, A100, A400);

// The warn palette is optional (defaults to red).
$women-store-warn: mat-palette($mat-red);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$women-store-theme: mat-light-theme((
  color: (
    primary: $women-store-primary,
    accent: $women-store-accent,
    warn: $women-store-warn,
  )
));

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include angular-material-theme($women-store-theme);


// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@import '~@angular/material/theming';
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat-core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$women-store-primary: mat-palette($mat-indigo);
$women-store-accent: mat-palette($mat-pink, A200, A100, A400);

// The warn palette is optional (defaults to red).
$women-store-warn: mat-palette($mat-red);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$women-store-theme: mat-light-theme((
  color: (
    primary: $women-store-primary,
    accent: $women-store-accent,
    warn: $women-store-warn,
  )
));

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include angular-material-theme($women-store-theme);

/* You can add global styles to this file, and also import other style files */
*{
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}
html, body{
  height: 100%;
}
.wrapper{
  min-height: 100%;
  display: flex;
  flex-direction: column;
}
.main{
  padding: 0 150px;
  flex: 1 1 auto;
}
@media (max-width: 1300px) {
  .main{
    padding: 0 100px;
  }
}
@media (max-width: 1100px) {
  .main{
    padding: 0 40px;
  }
}
@media (max-width: 425px) {
  .main{
    padding: 0 15px;
  }
}
html, body { height: 100%; }
body { margin: 0; font-family: Roboto, "Helvetica Neue", sans-serif; }

///* Importing Bootstrap SCSS file. */
//@import '~bootstrap/scss/bootstrap';

html, body { height: 100%; }
body { margin: 0; font-family: Roboto, "Helvetica Neue", sans-serif; }

ul{
  padding-left: 0;
}

///* Importing Bootstrap SCSS file. */
//@import '~bootstrap/scss/bootstrap';
