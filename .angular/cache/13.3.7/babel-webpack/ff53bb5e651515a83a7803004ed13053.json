{"ast":null,"code":"import { of } from 'rxjs';\nimport { catchError, tap } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/notifications.service\";\nimport * as i2 from \"../services/auth.service\";\nexport let PreloaderInterceptor = /*#__PURE__*/(() => {\n  class PreloaderInterceptor {\n    constructor(notificationsService, authService) {\n      this.notificationsService = notificationsService;\n      this.authService = authService;\n    }\n\n    intercept(request, next) {\n      return next.handle(request).pipe(catchError(event => {\n        this.notificationsService.setErrorPreloader();\n        this.authService.handleError(event);\n        return of(event);\n      }), tap(event => {\n        this.notificationsService.setPreloaderState(event.type);\n        return event;\n      }));\n    }\n\n  }\n\n  PreloaderInterceptor.ɵfac = function PreloaderInterceptor_Factory(t) {\n    return new (t || PreloaderInterceptor)(i0.ɵɵinject(i1.NotificationsService), i0.ɵɵinject(i2.AuthService));\n  };\n\n  PreloaderInterceptor.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: PreloaderInterceptor,\n    factory: PreloaderInterceptor.ɵfac\n  });\n  return PreloaderInterceptor;\n})();","map":null,"metadata":{},"sourceType":"module"}