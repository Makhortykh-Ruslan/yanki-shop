{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport { environment } from '../../environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./products.service\";\nimport * as i2 from \"@angular/common/http\";\nexport let CartService = /*#__PURE__*/(() => {\n  class CartService {\n    constructor(productsService, http) {\n      this.productsService = productsService;\n      this.http = http;\n      this.cartStore$ = new BehaviorSubject([]);\n    }\n\n    getAllProducts() {\n      return JSON.parse(sessionStorage.getItem('allProducts') || '{}');\n    }\n\n    addProduct(product) {\n      const copyCartStore = this.cartStore$.getValue();\n      this.cartStore$.next([...copyCartStore, product]);\n    }\n\n    deletedProduct(id) {}\n\n    createCartDB() {\n      const newCart = {\n        product: '',\n        cartQuantity: 1\n      };\n      return this.http.post(`${environment.api}/cart`, newCart);\n    }\n\n    addProductOnCartDB(id) {\n      // @ts-ignore\n      return this.http.put(`${environment.api}/cart/${id}`);\n    }\n\n    getCartDB() {\n      return this.http.get(`${environment.api}/cart`).subscribe(res => {\n        // @ts-ignore\n        const result = res['products'];\n        this.cartStore$.next(result);\n      });\n    }\n\n  }\n\n  CartService.ɵfac = function CartService_Factory(t) {\n    return new (t || CartService)(i0.ɵɵinject(i1.ProductsService), i0.ɵɵinject(i2.HttpClient));\n  };\n\n  CartService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: CartService,\n    factory: CartService.ɵfac,\n    providedIn: 'root'\n  });\n  return CartService;\n})();","map":null,"metadata":{},"sourceType":"module"}